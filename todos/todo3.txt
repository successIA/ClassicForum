from forum.threads.tests.utils import make_threads
make_threads(count=30, user=User.objects.get(username="aia99"), category=Category.objects.get(slug="programming"))

from django.utils import timezone

from forum.accounts.models import User
from forum.categories.models import Category
from forum.threads.models import Thread, ThreadActivity
from forum.comments.models import Comment
from forum.attachments.models import Attachment
from forum.notifications.models import Notification
from django.db.models import Max, Min, Count, F, Value, CharField, Prefetch, Sum


from faker import Faker
fake = Faker()

usr = User.objects.get(id=1)
usr2 = User.objects.get(id=2)
usr3 = User.objects.get(id=3)

cat = Category.objects.all().first()
th = Thread.objects.all().first()


	
for i in range(13):
    m = ''.join(fake.texts())
    if (isinstance(m, str)):
        Comment.objects.create(message=m, user=usr, thread=th, created=timezone.now(), modified=timezone.now())
        th.refresh_from_db()



for i in range(72):
    t = fake.sentence()
    m = ''.join(fake.texts())
    if (isinstance(t, str)) and (isinstance(m, str)):
        th = Thread.objects.create(title = t, body="NA", user=usr, category=cat, created=timezone.now(), modified=timezone.now())
        co = Comment.objects.create(message=m, user=usr, thread=th, is_starting_comment=True, created=timezone.now(), modified=timezone.now())
        th.starting_comment = co
        Thread.objects.filter(pk=th.pk).update(starting_comment=co)	 

th = Thread.objects.create(title="Python Discussion", body="NA", category=cat, user=usr)

sc = Comment.objects.create(message=''.join(fake.texts()), thread=th, user=usr, is_starting_comment=True)

c = Comment.objects.create(message=''.join(fake.texts()), thread=th, user=usr)


report user
report inappropiate thread
report inappropiate comment

hide threads
hide comment
delete threads permanently
delete comment permanently

moderation
 - suspend users
 - delete accounts

dedicated admin dashboard
	- all


optional
	email user privately

Report
	- description
	- reporter
	- comment

	=> The reporter and comment must be unique together
	=> A user cannot report a comment twice unless the comment
	   is updated
	=> 

	ReportForm
		description options

	comments/12/report

	{'description': "inappropiate comment"}

To hide a comment or thread, make it active field be False

spam and

if user.ban_period > timezone.now():
	redirect('accounts:messages')


You have banned for 3 days from posting or voting on classic forum because
you the violated rule 3
	- Spam
3 days remaining for the ban to be lifted

class User
	ban_period

class Report(TimeStampedModel):
	rules = 
	reporter =
	violator = 
	comment = 
	action_taken = 
	ban_period = 

post => /report/321/
        
delete comment
delete thread
hide thread

class Moderation
	moderator 
	category
	hidden threads
	hidden comments
	ban user who are not moderators





coverage html --omit="*/test*" -d

test_redirect_for_guest
test_with_authenticated_user_without_perm_
test_permission_denied_for_moderators
test_render_for_superuser
test_empty_data_rejection
test_invalid_data_rejection
test_submit_success


hide_thread
test_permission_denied_for_guest
test_permission_denied_for_unprevileged_users
test_permission_denied_for_unprevileged_moderators
test_hide_thread_success_for_previleged_moderators
test_hide_thread_failure_for_thread_moderator
test_hide_thread_suceess_for_thread_supermoderator


an hidden thread cannot be seen, updated, or commented on by
unprevileged users 

a moderator can see any hidden thread or comment

a moderator can unhide comment whose thread was hidden by co-moderator
but cannot hide comment in the thread.

a supermoderator can unhide comment whose thread was hidden by co-moderator
and can also hide comment in the thread.

a user can only hide their threads or comments if they have not been approved
rather than delete.

a user can only be banned on the bases of comment or thread they have created
