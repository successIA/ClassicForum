 Separate all the models into their corresponding apps
  - comments app
  - threads app
  - categories app
  - accounts app
 Check if the tests are still working, if not so, refactor all the test files till we get green
  - Each app should have their own test folder like Comments App -> test_views.py, test_models.py, test_forms.py

 prune down verbose and  diffcult to read codes

UserProfile should contain
 The dashboard should show
  - userprofile picture on the top left corner of the page and buttons to show and add avatar
  - There should be a text describing the user's port folio with 32 characters on below the avatar
  - The date joined should be displayed
  - a horizontal tab panel displaying Latest Threads, Threads , Followed Threads, Activity, Followers, Following 

Comments App
	Implement a twitter like mention system
	They recipient should be notified that they were mentioned in a thread
	Comment Model
	 - ManyToManyField to users (likes)

Threads App
 Thread should use summernote editor which allows only image, italic, bold, h2,h3,h4
 Thread ManyToManyField to likes
 Add tags to Thread
  tags should be added via ajax to enable auto suggest while the user is typing
  Tag
  	- term  unique to True
  	- thread manytomanyfield to thread

Categories App
Add parent category to category
 parent foreignkey to self



users can follow other users
users can follow a thread

Image App
image c_type obj_id 
abu.jpg thread 1

FollowerShip
 leader
 follower
 content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE)
 object_id = models.PositiveIntegerField()
 content_object = GenericForeignKey('content_type', 'object_id')

user_id thread_id following follower
1 1 2 2
1 2 3 3
1 3 4 4

2 1
 id content_type object_id
 1  thread


for notif in notifications
 if notif == notif.THREAD_COMMENTED
   if notif.comment.children.count > 0
    notif.comment.user (user A) notif.comment.get_absolute_url(commented#1) on
    a thread
    if notif.comment.children.count >= 3:
      and notif.comment.children.count notif.comment.children.first.user  and 
      notif.comment.children.count -1(3) others notif.comment.children.first 
      (#replied) to this comment

    if notif.comment.children.count == 2:
      notif.comment.children.first.user and notif.comment.children.last.user 
      notif.comment.children.first (replied#) to this comment
   else
      notif.comment.children ==0:
        notif.comment.user (user A) notif.comment.get_absolute_url(commented#1) on
        a thread

get_new_comments():
  select * notifications_notification where self.id = thread_id and not_type = 'THREAD_COMMENTED'
  read=False
  Notification.objects.filter(thread=thread, ...)
  count = 0
  for ntf in nf_qs:
    count =+ 1
    


comment_id thread_id receiver
5               1      2
3               1      2
1               2      2

thread name thread.new_comments.count thread.new_comments.first().get_url
thread name
new_comment_count = 0

self.filter(status='P').annotate(
            tagged=Count('tags')).filter(tags__gt=0)

Not.objects.filter()
Notifications.objects.annotate( new_c_count=)
new_c_thread_dict = {}
{thread1: 5, thread2: 10, thread6:10}

for notif in notifications
 if notif == notif.THREAD_COMMENTED
  if notif.thread.id in new_c_thread_dict 
    new_c_thread[notif.thread.id] =+ 1
    for notif == notif.THREAD_COMMENTED:
      if notif.thread.id == notif.comment.thread.id
        new_c_thread[notif.thread.id]
  else
    new_c_thread[notif.thread.id] = 1


30

notif1 thread1 co1
notif2 thread1 co2
notif3
Comment#1
 comment#2
 comment#3
 comment#4
 comment#5
Comment#6
 comment#7
 comment#10
Comment#8
Comment#9

A user A commented#1 on a thread and user B and 3 others replied#2 to this comment
A user commented#6 on a thread and user C and user D replied#2 to this comment
User E and User F commented#8 on your thread

Comment#11
Comment#12
Comment#13
User F and two others commented#8 on your thread

Comment#10
 comment#14

User E replied comment#10

Comment#10
 comment#14
 comment#15

User C replied comment#10





django-wysiwyg-redactor==0.5.1
Markdown==2.6.11
django-markdownx==2.0.22
django-redactoreditor==1.2.10
django-autoslug==1.9.3
